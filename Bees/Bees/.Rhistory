boxplot(model, x = block)
#Descriptive analysis
boxplot(x = model$block)
#Descriptive analysis
boxplot(x = pig$block)
#Descriptive analysis
boxplot(x = pigs$block)
str(pigs)
#Descriptive analysis
ggplot(pigs, aes(x=block, y=y)) +
geom_boxplot()
#Descriptive analysis
ggplot(pigs, aes(x=block, y=y)) +
geom_boxplot() +
labs(x="Block (pig)", y="Weight gained after 15 of diet" )
#Descriptive analysis
ggplot(pigs, aes(x=block, y=y, color=rep)) +
geom_boxplot() +
labs(x="Block (pig)", y="Weight gained after 15 of diet" )
#Descriptive analysis
ggplot(pigs, aes(x=block, y=y, color=rep)) +
geom_boxplot() +
labs(x="Pig (Block)", y="Weight gained after 15 of diet", color ="Litters (rep)" )
head(pigs)
#Descriptive analysis
ggplot(pigs, aes(x=block, y=y, color=rep)) +
geom_boxplot() +
labs(x="Pig (Block)", y="Weight gained after diets", color ="Litters (rep)" )
ggplot(pigs, aes(x=block, y=a, color=rep)) +
geom_boxplot() +
labs(x="Pig (Block)", y="Weight gained after diets", color ="Litters (rep)" )
ggplot(pigs, aes(x=block, y=b, color=rep)) +
geom_boxplot() +
labs(x="Pig (Block)", y="Weight gained after diets", color ="Litters (rep)" )
ggplot(pigs, aes(x=block, y=c, color=rep)) +
geom_boxplot() +
labs(x="Pig (Block)", y="Weight gained after diets", color ="Litters (rep)" )
#Descriptive analysis
ggplot(pigs, aes(x=block, y=y, color=rep)) +
geom_boxplot() +
labs(x="Pig (Block)", y="Weight gained after diets", color ="Litters (rep)" )
#Running anova test
library(car)
Anova(model)
#Adjusting means
library(emmeans)
emmeans(model, ~var)
emmeans(model, ~y)
model
#Defining model
model <- lmer(y ~ a+ b+ c + a*b + a*c + b*c + a*b*c + rep + (1|block:rep), data = pigs)
emmeans(model, ~y)
lsmeans(model, test.effs=NULL, method.grad='simple')
#Adjusting means
library(lsmeans)
lsmeans(model, "y")
model
head(pigs)
fortify(model)
fortify(pigs)
ggplot(fortify(pigs), aes(block, y, color=rep)) +
stat_summary(fun.data=mean_se, geom="pointrange") +
stat_summary(aes(y=.fitted), fun.y=mean, geom="line")
ggplot(fortify(pigs), aes(block, y, color=rep))
Anova(model)
setwd("~/Documents/Bees/")
metadata <- read.csv('metadata_pollen.csv',header = T)
head(metadata)
colnames(metadata)
library(dplyr)
library(tidyverse)
metadata
metadata %>% dplyr::select(LandscapeType)
metadata %>% dplyr::select(LandscapeType) %>% unique()
colnames(metadata)
metadata %>% dplyr::select(MarshCode, LandscapeType) %>% unique()
metadata %>% dplyr::select(MarshCode, LandscapeType, Woodland) %>% unique()
metadata %>% dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>% unique()
metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique()
metadata %>%
dplyr::select(MarshCode, SampleCode, LandscapeType, Woodland, OpenNatural) %>%
unique()
metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique()
install.packages('xtable')
# print as xtable
library("xtable")
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique()
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(0,1,2,11))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = II,
hline.after = c(0,1,2,11))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(1,2,11))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(4))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11))
pdf(file = 'info_marshes.pdf')
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11))
dev.off()
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
file = 'info.marshes.pdf')
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
file = 'info.marshes.txt')
print(xtable(temp, file='info.pdf'),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11))
print(xtable(temp, file='~/Documents/Bees/info.pdf'),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11))
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = T)
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = T,
file='~/Documents/Bees/info.pdf')
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = T,
file='~/Documents/Bees/info.png')
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = F,
file='~/Documents/Bees/info.png')
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = F,
file='~/Documents/Bees/info.pdf')
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = T)
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = T)
xtable(temp)
xtable(temp)
print.xtable(temp)
print.xtable(temp,)
print.xtable(temp,0)
xtable(temp)
xtable(as.data.frame(temp))
data(tli)
xtable(tli[1:10, ])
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
xtable(tli[1:10, ])
xtable(as.data.frame(temp))
data(tli)
xtable(tli[1:10, ])
print(xtable(temp),
include.rownames = FALSE,
include.colnames = FALSE,
sanitize.text.function = I,
hline.after = c(11),
print.results = T)
install.packages("kableExtra")
#Bees
setwd("~/Documents/Bees/")
metadata <- read.csv('metadata_pollen.csv',header = T)
head(metadata)
colnames(metadata)
library(dplyr)
library(tidyverse)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique()
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique()
## Create the table
library(kableExtra)
kbl(tmp)
kbl(temp)
kbl(temp)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% 'colnames<-'c(MarshCode)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% 'colnames<-'(c(MarshCode))
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% column_to_rownames(MarshCode)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% column_to_rownames(MarshCode)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>% column_to_rownames(MarshCode)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>% column_to_rownames('MarshCode')
kbl(temp)
kbl(temp, booktabs = T)
kbl(temp, booktabs = T)
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(1, width = "8cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(1:4, width = "3cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(1:4, width = "1cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(c(1,2,3,4), width = "1cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(c(2), width = "1cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(c(2), width = "0.5cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(2, width = "0.5cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center')
kbl(temp, booktabs = T) %>%
kable_styling(position = 'center')
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T, position = 'center') %>%
column_spec(2, width = "0cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(2, width = "0cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(2, width = "1cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(1, width = "1cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(1, width = "3cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(1, width = "4cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(1, width = "5cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = T) %>%
column_spec(1, width = "6cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "6cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "1cm")
kbl(temp, booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "2cm")
gsub('.$','.$ %', temp$Woodland)
gsub('$','$ %', temp$Woodland)
gsub('(.)$','\\1 %', temp$Woodland)
temp$Woodland <- gsub('(.)$','\\1 %', temp$Woodland)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>%
column_to_rownames('MarshCode') %>%
mutate(Woodland = gsub('(.)$', '\\1%', Woodland))
head(temp)
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>%
column_to_rownames('MarshCode') %>%
mutate(Woodland = gsub('(.)$', '\\1 %', Woodland), OpenNatural= gsub('(.)$', '\\1 %', OpenNatural))
head(temp)
kbl(temp, booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "2cm")
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>%
column_to_rownames('MarshCode') %>%
mutate(Woodland = gsub('(.)$', '\\1 %', Woodland), OpenNatural= gsub('(.)$', '\\1 %', OpenNatural)) %>%
dplyr::select(order(LandscapeType))
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>%
column_to_rownames('MarshCode') %>%
mutate(Woodland = gsub('(.)$', '\\1 %', Woodland), OpenNatural= gsub('(.)$', '\\1 %', OpenNatural))
temp <- metadata %>%
dplyr::select(MarshCode, LandscapeType, Woodland, OpenNatural) %>%
unique() %>% remove_rownames %>%
column_to_rownames('MarshCode') %>%
mutate(Woodland = gsub('(.)$', '\\1 %', Woodland), OpenNatural= gsub('(.)$', '\\1 %', OpenNatural)) %>%
arrange(LandscapeType)
kbl(temp, booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "2cm")
temp
View(metadata)
```{r, include=FALSE}
head(metadata)
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType)
barplot(metadata %>% filter(MarshCode == 'AC'), main="Car Distribution",
xlab="Number of Gears")
barplot(as.matrix(metadata %>% filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode)), main="Car Distribution",
xlab="Number of Gears")
barplot(as.matrix(temp %>% filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode)), main="Car Distribution",
xlab="Number of Gears")
head(temp)
as.matrix(temp %>% filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode))
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType) %>% column_to_rownames('SampleCode')
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType) %>% column_to_rownames('SampleCode')
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType)
rownames(temp ) <- temp$SampleCode
SampleCode
temp$SampleCode
temp %>% filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode)
temp %>% filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode)
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType)
temp
temp %>% filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode)
temp %>% dplyr::filter(MarshCode == 'AC') %>% dplyr::select(-MarshCode)
temp %>% dplyr::filter(MarshCode == 'AC')
temp
temp %>% filter(MarshCode == 'AC')
temp$MarshCode['AC',]
temp$MarshCode['AC']
temp$MarshCode[,'AC']
temp$MarshCode[['AC']]
temp$MarshCode
temp$MarshCode == 'AC'
temp[temp$MarshCode == 'AC',]
temp[temp$MarshCode %like% 'AC',]
install.packages('data.talbe')
install.packages('data.table')
library(data.table)
temp[temp$MarshCode %like% 'AC',]
temp <- as.data.frame(metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType))
temp[temp$MarshCode %like% 'AC',]
library(data.table)
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType)
temp
temp[temp$MarshCode %like% 'WC',]
temp$SpeciesType <- as.factor(temp$SpeciesType)
levels(temp[temp$MarshCode %like% 'WC',])
levels(temp[temp$MarshCode %like% 'WC',]$SpeciesType)
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(levels(SpeciesType)))
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(levels(.$SpeciesType)))
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = levels(SpeciesType))
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(levels(SpeciesType)))
length(MarshCodelevels(SpeciesType))
length(levels(metadata$SpeciesType))
length(levels(temp$SpeciesType))
levels(temp[temp$MarshCode %like% 'WC',]$SpeciesType)
levels(temp[temp$MarshCode %like% 'WC',]$SpeciesType) %>% levels()
levels(temp[temp$MarshCode %like% 'WC',]$SpeciesType) %>% length()
levels(temp[temp$MarshCode %like% 'WC',]$SpeciesType)
levels(temp[temp$MarshCode %like% 'AC',]$SpeciesType)
temp[temp$MarshCode %like% 'WC',] %>% View()
temp[temp$MarshCode %like% 'WC',]$SpeciesType
temp <- metadata %>% dplyr::select(MarshCode, SampleCode, SpeciesType) %>% drop_na()
temp$SpeciesType <- as.factor(temp$SpeciesType)
temp[temp$MarshCode %like% 'WC',]$SpeciesType %>%
temp[temp$MarshCode %like% 'WC',] %>% View()
temp[temp$MarshCode %like% 'WC',]$SpeciesType %>%
temp[temp$MarshCode %like% 'WC',] %>% View()
temp
temp[temp$MarshCode %like% 'WC',]$SpeciesType
temp[temp$MarshCode %like% 'AC',]$SpeciesType
sample(letters,100,rep=TRUE)
temp[temp$MarshCode %like% 'AC',]$SpeciesType
temp[temp$MarshCode %like% 'AC',]$SpeciesType %>% table()
temp[temp$MarshCode %like% 'AC',]$SpeciesType
temp[temp$MarshCode %like% 'WC',]$SpeciesType
temp$SpeciesType <- as.character(temp$SpeciesType)
temp[temp$MarshCode %like% 'AC',]$SpeciesType
temp[temp$MarshCode %like% 'WC',]$SpeciesType
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(unique(SpeciesType)))
## Create the table
kbl(temp, booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "2cm")
tab_temp <- temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(unique(SpeciesType)))
## Create the table
kbl(
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(unique(SpeciesType))),
booktabs = T) %>%
kable_styling(full_width = F) %>%
column_spec(1, width = "2cm")
## Create the table
kbl(
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(unique(SpeciesType))),
booktabs = T) %>%
kable_styling(full_width = F, position = 'center') %>%
column_spec(1, width = "2cm")
length(unique(temp$SpeciesType)))
length(unique(temp$SpeciesType)
)
## Create the table
kbl(
temp %>%
group_by(MarshCode) %>%
summarise(Morphotypes = length(unique(SpeciesType))),
booktabs = T) %>%
kable_styling(full_width = F, position = 'center') %>%
column_spec(1, width = "2cm")
View(metadata)
#Cranberry and non cranberry pollen bundles
temp <- metadata %>%
dplyr::select(MarshCode, WeightG, IdCran)
is.na(temp$WeightG
)
table(is.na(temp$WeightG
))
#Cranberry and non cranberry pollen bundles
temp <- metadata %>%
dplyr::select(MarshCode, WeightG, IdCran) %>%
drop_na() %>%
group_by(MarshCode, IdCran) %>%
summarise(sum(WeightG))
#Cranberry and non cranberry pollen bundles
temp <- metadata %>%
dplyr::select(MarshCode, WeightG, IdCran) %>%
drop_na() %>%
group_by(MarshCode, IdCran) %>%
summarise(sum(WeightG), .groups = 'drop')
temp
#Cranberry and non cranberry pollen bundles
temp <- metadata %>%
dplyr::select(MarshCode, WeightG, IdCran) %>%
drop_na()
View(temp)
