# The simplest thing we can do with R is arithmetic
10 + 5
# The simplest thing we can do with R is arithmetic
10 + 5
2 - 20
20 - 2
10 + 5
20 - 2
5*20
10 +
5e3
2/100000
# What if?
10 + # Incomplete command
10 + (5 * 8)
10 + (5*8)
5*8
5 * 8
# What if?
10 + # Incomplete command
10 + (5 * 8)
10 + (5*8)
# What if?
10 + (5 * 8)
10 + (5*8)
Example <- read.csv("~/Documents/GitHub/Example.csv")
View(Example)
View(Example)
View(Example)
View(Example)
# What if?
10 +
data.frame(numbers = 0:5,
letters = c('A','B','C','D','E'))
# What if?
10 +
data.frame(numbers = (1:5),
letters = c('A','B','C','D','E'))
# What if?
10 +
data.frame(numbers = (1,2,3,4,5),
# What if?
10 +
data.frame(numbers = c(1,2,3,4,5),
letters = c('A','B','C','D','E'))
# What if?
10 +
data.frame(numbers = c(1,2,3,4,5),
letters = c('A','B','C','D','E'))
data.frame(numbers = c(1,2,3,4,5),
letters = c('A','B','C','D','E'))
data.frame(numbers = 1:5,
letters = c('A','B','C','D','E'))
data.frame(numbers = 1:5,
letters = c('A','B','C','D','E'))
data.frame(numbers = 1:5,
letters = 'A:E')
data.frame(numbers = 1:5,
letters = A:E)
?sum()
(5*20) + 14/2
sum(5*20, 14/2)
# Scientific notation
2/100000
2e10
sum(5,10)
# R includes math functions!
5 + 10
sum(x, y)
# Save my result in a 'variable'
x <- 5 + 10
y <- 12 - 4
x + y
sum(x, y)
class(x)
class(z)
z <- sum(x, y)
class(z)
# Sum
10 + 5
# Substraction
20 - 2
# Multiplication
5*20
# What if?
10 +
# Using parenthesis
3 + 5 * 2
# What if?
10 +
# Using parenthesis
3 + 5 * 2
10 +
# What if?
10 + 5
# What if?
10 +
# Using parenthesis
3 + 5 * 2
5 + 2
5 + 2
x <- 5 + 2
x
y <- 10 + 3
x + y
z <- x + y
x + y -> z
library(pdftools)
library(magick)
setwd('~/Documents/GitHub/CranberryLab/Internal_Structure/PDF')
# Ruta del archivo PDF original
input_pdf <- "STAMPS_00.PDF"
# Extraer todas las páginas como texto o imágenes
total_pages <- pdf_length(input_pdf)
for (i in 1:total_pages) {
output_pdf <- sprintf("Stamp_photos/pagina_%d.pdf", i)
pdf_subset(input_pdf, pages = i, output = output_pdf)
}
if (!dir.exists("Stamp_photos")) {
dir.create("Stamp_photos")
}
for (i in 1:total_pages) {
output_pdf <- sprintf("Stamp_photos/pagina_%d.pdf", i)
pdf_subset(input_pdf, pages = i, output = output_pdf)
}
# Carpeta donde están los PDFs
input_dir <- "~/Documents/GitHub/CranberryLab/External_structure/PDF/Stamp_photos/"  # Cambia a la carpeta con tus PDFs
output_dir <- "~/Documents/GitHub/CranberryLab/External_structure/PDF/Stamp_photos/JPG"  # Cambia a la carpeta donde quieres guardar las imágenes
dir.create(output_dir, recursive = TRUE)  # Crea la carpeta de salida si no existe
# Listar todos los archivos PDF en la carpeta
pdf_files <- list.files(input_dir, pattern = "\\.pdf$", full.names = TRUE)
# Procesar cada PDF
for (pdf in pdf_files) {
# Crear el nombre del archivo de salida
output_image <- file.path(output_dir, paste0(tools::file_path_sans_ext(basename(pdf)), ".jpg"))
# Leer el PDF y convertirlo en una imagen
image <- image_read_pdf(pdf, density = 300)  # Cambia 'density' si necesitas más o menos resolución
# Guardar la imagen como JPG
image_write(image, path = output_image, format = "jpg")
}
output_dir <- "~/Documents/GitHub/CranberryLab/Internal_structure/PDF/Stamp_photos/JPG"  # Cambia a la carpeta donde quieres guardar las imágenes
dir.create(output_dir, recursive = TRUE)  # Crea la carpeta de salida si no existe
# Listar todos los archivos PDF en la carpeta
pdf_files <- list.files(input_dir, pattern = "\\.pdf$", full.names = TRUE)
# Procesar cada PDF
for (pdf in pdf_files) {
# Crear el nombre del archivo de salida
output_image <- file.path(output_dir, paste0(tools::file_path_sans_ext(basename(pdf)), ".jpg"))
# Leer el PDF y convertirlo en una imagen
image <- image_read_pdf(pdf, density = 300)  # Cambia 'density' si necesitas más o menos resolución
# Guardar la imagen como JPG
image_write(image, path = output_image, format = "jpg")
}
# Carpeta donde están los PDFs
input_dir <- "~/Documents/GitHub/CranberryLab/Internal_structure/PDF/Stamp_photos/"  # Cambia a la carpeta con tus PDFs
output_dir <- "~/Documents/GitHub/CranberryLab/Internal_structure/PDF/Stamp_photos/JPG"  # Cambia a la carpeta donde quieres guardar las imágenes
dir.create(output_dir, recursive = TRUE)  # Crea la carpeta de salida si no existe
dir.create(output_dir)  # Crea la carpeta de salida si no existe
dir.create(output_dir, showWarnings = F)  # Crea la carpeta de salida si no existe
# Listar todos los archivos PDF en la carpeta
pdf_files <- list.files(input_dir, pattern = "\\.pdf$", full.names = TRUE)
# Procesar cada PDF
for (pdf in pdf_files) {
# Crear el nombre del archivo de salida
output_image <- file.path(output_dir, paste0(tools::file_path_sans_ext(basename(pdf)), ".jpg"))
# Leer el PDF y convertirlo en una imagen
image <- image_read_pdf(pdf, density = 300)  # Cambia 'density' si necesitas más o menos resolución
# Guardar la imagen como JPG
image_write(image, path = output_image, format = "jpg")
}
